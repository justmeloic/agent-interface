# Example environment configuration file
# Copy this to .env and update with your actual values

# Server configuration
HOST=0.0.0.0
PORT=1
LOG_LEVEL=INFO
DEBUG=false
ENVIRONMENT=development

# API configuration
API_TITLE=CBA Agent API
API_DESCRIPTION=API for interacting with the CBA information agent
API_VERSION=1.0.0

# Frontend URL for CORS
FRONTEND_URL=http://localhost:3000

# Google Cloud Platform configuration (required)
GOOGLE_CLOUD_PROJECT=your-gcp-project-id
GOOGLE_CLOUD_LOCATION=your-gcp-location
GCS_BUCKET_NAME=cn-cba-docs
SERVICE_ACCOUNT_EMAIL=your-service-account
SIGNED_URL_LIFETIME=2

# Model configuration
GEMINI_MODEL=gemini-2.5-flash

# Authentication
AUTH_SECRET=your-super-secret-key

# Data configuration
# Determines how the application accesses reference documents.
# Use 'GCS' for signed URLs to Google Cloud Storage (production recommended).
# Use 'LOCAL' to serve files from the local 'testdata' directory via an API endpoint (for development).
FILE_ACCESS_METHOD=GCS
AGREEMENT_MAPPING_CSV=Agreement_Mapping_with_Filenames.csv
# Specifies the directory containing local test data. Used when FILE_ACCESS_METHOD is 'LOCAL'.
TESTDATA_DIR=testdata

# Development settings
RESTART_SCRIPT_PATH=./scripts/restart-server.sh

# --- Legacy configuration (for reference) ---
# The following variables may still be used by other parts of the system

# Model access: Google AI Studio API or Vertex AI API(through GCP project)
GOOGLE_GENAI_USE_VERTEXAI=TRUE

# For Google AI Studio API (GOOGLE_GENAI_USE_VERTEXAI=FALSE)
GOOGLE_API_KEY=${GEMINI_API_KEY}

# For Vertex AI API (GOOGLE_GENAI_USE_VERTEXAI=TRUE)
DATA_STORE_ID=cn-cba_1747357876332
SUMMARY_RESULT_COUNT=5

